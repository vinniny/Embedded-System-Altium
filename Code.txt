/*
 * STM32F103C8T6 Smart Door Lock System
 * Author: Gizmo
 * Description: Firmware for STM32F103C8T6 Microcontroller handling Smart Door Lock System
 */

#include "stm32f1xx_hal.h"    // STM32F103C8T6 HAL Library
#include "lcd.h"              // LCD Display Library
#include "keypad.h"           // Keypad Library
#include "rfid.h"             // RFID Reader Library
#include "servo.h"            // Servo Motor Control Library
#include "sensor.h"           // Magnetic Sensor Library
#include "buzzer.h"           // Buzzer Control Library

// Define Password and RFID Tag
#define PASSWORD "1234"
char rfid_tag[] = "TAG123"; // Example RFID Tag ID

// Define Pin for Reset Switch
#define RESET_SWITCH_PIN GPIO_PIN_0
#define RESET_SWITCH_PORT GPIOA

// Define Servo Motor PWM Pin
#define SERVO_PIN GPIO_PIN_1
#define SERVO_PORT GPIOA
#define PWM_CHANNEL TIM_CHANNEL_1

// Define Buzzer Pin
#define BUZZER_PIN GPIO_PIN_2
#define BUZZER_PORT GPIOA

// UART for RFID Reader
UART_HandleTypeDef huart1;

// Timer for Servo Control
TIM_HandleTypeDef htim2;

// Function Prototypes
void System_Init(void);
void Idle_State(void);
void Verify_Input(char* input);
void Unlock_Door(void);
void Lock_Door(void);
void Display_Message(char* message);
void Servo_PWM_Init(void);
void RFID_UART_Init(void);
void Buzzer_Success(void);
void Buzzer_Failure(void);
int RFID_Read(char* buffer);

int main(void) {
    System_Init();
    while (1) {
        Idle_State();
    }
}

// System Initialization
void System_Init(void) {
    HAL_Init();
    LCD_Init();
    Keypad_Init();
    RFID_UART_Init();
    Servo_PWM_Init();

    // Initialize Buzzer
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = BUZZER_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(BUZZER_PORT, &GPIO_InitStruct);

    Display_Message("Enter Password or Swipe Card");
}

// Servo Unlock (Open Door)
void Servo_Unlock(void) {
    __HAL_TIM_SET_COMPARE(&htim2, PWM_CHANNEL, 2000); // Unlock position (Change as needed)
    HAL_Delay(1000);
}

// Servo Lock (Close Door)
void Servo_Lock(void) {
    __HAL_TIM_SET_COMPARE(&htim2, PWM_CHANNEL, 1000); // Lock position (Change as needed)
    HAL_Delay(1000);
}

// Buzzer Success
void Buzzer_Success(void) {
    HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
    HAL_Delay(200);
    HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
}

// Buzzer Failure
void Buzzer_Failure(void) {
    for (int i = 0; i < 3; i++) {
        HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
        HAL_Delay(100);
        HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
        HAL_Delay(100);
    }
}

// RFID Read (Non-blocking)
int RFID_Read(char* buffer) {
    if (HAL_UART_Receive(&huart1, (uint8_t*)buffer, 20, 100) == HAL_OK) {
        buffer[19] = '\0'; // Null-terminate
        return 1; // Successfully read
    }
    return 0; // No data
}

// Display Message on LCD
void Display_Message(char* message) {
    LCD_Clear();
    LCD_Print(message);
}

// Idle State
void Idle_State(void) {
    char input[20];

    // Check Reset Button
    if (HAL_GPIO_ReadPin(RESET_SWITCH_PORT, RESET_SWITCH_PIN) == GPIO_PIN_SET) {
        Display_Message("System Resetting...");
        HAL_Delay(2000);
        System_Init();
    }

    // Check Keypad Input
    if (Keypad_Read(input)) {
        Verify_Input(input);
    }

    // Check RFID Input
    if (RFID_Read(input)) {
        Verify_Input(input);
    }

    Display_Message("Enter Password or Swipe Card");
}

// Verify Input
void Verify_Input(char* input) {
    if (strcmp(input, PASSWORD) == 0 || strcmp(input, rfid_tag) == 0) {
        Display_Message("Access Granted");
        Buzzer_Success();
        Unlock_Door();
    } else {
        Display_Message("Access Denied");
        Buzzer_Failure();
    }
}

// Unlock Door
void Unlock_Door(void) {
    Servo_Unlock();
    Display_Message("Door Unlocked");
    HAL_Delay(5000);  // Keep door unlocked for 5 seconds
    Lock_Door();
}

// Lock Door
void Lock_Door(void) {
    Servo_Lock();
    Display_Message("Door Locked");
}
